name: release
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-tools:
    runs-on: ubuntu-latest
    name: prepare
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.20

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-

  test:
    needs: build-tools
    runs-on: ubuntu-latest
    name: unit
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.20

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-
      - name: Make test cover
        run: make test-cover

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out

  lint:
    needs: build-tools
    runs-on: ubuntu-latest
    name: lint
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.20

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-
      - name: go-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: 'v1.51.1'
          skip-cache: true
          skip-pkg-cache: true
          skip-build-cache: true


  release:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    name: release
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.20

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4.4.0
        with:
          version: latest
          args: release --config .goreleaser.yml --clean
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload assets
        uses: actions/upload-artifact@v3
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          name: golurectl
          path: dist/*

  docker:
    runs-on: ubuntu-latest
    needs: release
    name: docker
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: ^1.20

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-test-
            ${{ runner.os }}-go-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build/Push server
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            robotomize/golurectl:latest